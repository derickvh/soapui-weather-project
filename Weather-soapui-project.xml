<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="bcbb23cd-5321-4c7b-8fc5-89188b0f8839" activeEnvironment="Default" name="Weather" lastOpened="2016-07-20T14:48:58.856+02:00" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="WeatherSoap12 TestSuite"/>
  <con:entry key="Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="true"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="GetCityForecastByZIP TestCase"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="Save After" value="true"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" id="456fa0f9-f335-4409-8a45-4f65befa21c2" wsaVersion="NONE" name="WeatherSoap12" type="wsdl" bindingName="{http://ws.cdyne.com/WeatherWS/}WeatherSoap12" soapVersion="1_2" anonymous="optional" definition="http://wsf.cdyne.com/WeatherWS/Weather.asmx?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint></con:endpoints><con:operation id="0dc8b1d3-199e-413b-afa1-325ebdb964b3" isOneWay="false" action="http://ws.cdyne.com/WeatherWS/GetCityForecastByZIP" name="GetCityForecastByZIP" bindingOperationName="GetCityForecastByZIP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6702cec7-b061-4e63-9f23-46635d100ca9" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soap:Header/>
   <soap:Body>
      <weat:GetCityForecastByZIP>
         <!--Optional:-->
         <weat:ZIP>?</weat:ZIP>
      </weat:GetCityForecastByZIP>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ws.cdyne.com/WeatherWS/WeatherSoap/GetCityForecastByZIPRequest"/></con:call></con:operation><con:operation id="ec15c4f3-846a-4adf-8113-b1a060af9f0e" isOneWay="false" action="http://ws.cdyne.com/WeatherWS/GetCityWeatherByZIP" name="GetCityWeatherByZIP" bindingOperationName="GetCityWeatherByZIP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="182df8eb-4ef3-4d5c-a489-b202bd62458c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soap:Header/>
   <soap:Body>
      <weat:GetCityWeatherByZIP>
         <!--Optional:-->
         <weat:ZIP>?</weat:ZIP>
      </weat:GetCityWeatherByZIP>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ws.cdyne.com/WeatherWS/WeatherSoap/GetCityWeatherByZIPRequest"/></con:call></con:operation><con:operation id="c8db0bbd-3043-4d10-a3a6-fc7d4ea82b24" isOneWay="false" action="http://ws.cdyne.com/WeatherWS/GetWeatherInformation" name="GetWeatherInformation" bindingOperationName="GetWeatherInformation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5e440bb4-fce4-4771-baf0-0f51fcd1b0ad" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soap:Header/>
   <soap:Body>
      <weat:GetWeatherInformation/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ws.cdyne.com/WeatherWS/WeatherSoap/GetWeatherInformationRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="637042ae-1805-47ef-83ec-d199cc4f01a0" wsaVersion="NONE" name="WeatherSoap" type="wsdl" bindingName="{http://ws.cdyne.com/WeatherWS/}WeatherSoap" soapVersion="1_1" anonymous="optional" definition="http://wsf.cdyne.com/WeatherWS/Weather.asmx?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://wsf.cdyne.com/WeatherWS/Weather.asmx?WSDL"><con:part><con:url>http://wsf.cdyne.com/WeatherWS/Weather.asmx?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://ws.cdyne.com/WeatherWS/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://ws.cdyne.com/WeatherWS/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://ws.cdyne.com/WeatherWS/">
      <s:element name="GetWeatherInformation">
        <s:complexType/>
      </s:element>
      <s:element name="GetWeatherInformationResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetWeatherInformationResult" type="tns:ArrayOfWeatherDescription"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfWeatherDescription">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="WeatherDescription" type="tns:WeatherDescription"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="WeatherDescription">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="WeatherID" type="s:short"/>
          <s:element minOccurs="0" maxOccurs="1" name="Description" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="PictureURL" type="s:string"/>
        </s:sequence>
      </s:complexType>
      <s:element name="GetCityForecastByZIP">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ZIP" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCityForecastByZIPResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCityForecastByZIPResult" type="tns:ForecastReturn"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ForecastReturn">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="Success" type="s:boolean"/>
          <s:element minOccurs="0" maxOccurs="1" name="ResponseText" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="State" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="WeatherStationCity" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="ForecastResult" type="tns:ArrayOfForecast"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfForecast">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="Forecast" nillable="true" type="tns:Forecast"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="Forecast">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="Date" type="s:dateTime"/>
          <s:element minOccurs="1" maxOccurs="1" name="WeatherID" type="s:short"/>
          <s:element minOccurs="0" maxOccurs="1" name="Desciption" type="s:string"/>
          <s:element minOccurs="1" maxOccurs="1" name="Temperatures" type="tns:temp"/>
          <s:element minOccurs="1" maxOccurs="1" name="ProbabilityOfPrecipiation" type="tns:POP"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="temp">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="MorningLow" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="DaytimeHigh" type="s:string"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="POP">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="Nighttime" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Daytime" type="s:string"/>
        </s:sequence>
      </s:complexType>
      <s:element name="GetCityWeatherByZIP">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ZIP" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCityWeatherByZIPResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetCityWeatherByZIPResult" type="tns:WeatherReturn"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="WeatherReturn">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="Success" type="s:boolean"/>
          <s:element minOccurs="0" maxOccurs="1" name="ResponseText" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="State" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="WeatherStationCity" type="s:string"/>
          <s:element minOccurs="1" maxOccurs="1" name="WeatherID" type="s:short"/>
          <s:element minOccurs="0" maxOccurs="1" name="Description" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Temperature" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="RelativeHumidity" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Wind" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Pressure" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Visibility" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="WindChill" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Remarks" type="s:string"/>
        </s:sequence>
      </s:complexType>
      <s:element name="ArrayOfWeatherDescription" nillable="true" type="tns:ArrayOfWeatherDescription"/>
      <s:element name="ForecastReturn" nillable="true" type="tns:ForecastReturn"/>
      <s:element name="WeatherReturn" type="tns:WeatherReturn"/>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="GetWeatherInformationSoapIn">
    <wsdl:part name="parameters" element="tns:GetWeatherInformation"/>
  </wsdl:message>
  <wsdl:message name="GetWeatherInformationSoapOut">
    <wsdl:part name="parameters" element="tns:GetWeatherInformationResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCityForecastByZIPSoapIn">
    <wsdl:part name="parameters" element="tns:GetCityForecastByZIP"/>
  </wsdl:message>
  <wsdl:message name="GetCityForecastByZIPSoapOut">
    <wsdl:part name="parameters" element="tns:GetCityForecastByZIPResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCityWeatherByZIPSoapIn">
    <wsdl:part name="parameters" element="tns:GetCityWeatherByZIP"/>
  </wsdl:message>
  <wsdl:message name="GetCityWeatherByZIPSoapOut">
    <wsdl:part name="parameters" element="tns:GetCityWeatherByZIPResponse"/>
  </wsdl:message>
  <wsdl:message name="GetWeatherInformationHttpGetIn"/>
  <wsdl:message name="GetWeatherInformationHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfWeatherDescription"/>
  </wsdl:message>
  <wsdl:message name="GetCityForecastByZIPHttpGetIn">
    <wsdl:part name="ZIP" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCityForecastByZIPHttpGetOut">
    <wsdl:part name="Body" element="tns:ForecastReturn"/>
  </wsdl:message>
  <wsdl:message name="GetCityWeatherByZIPHttpGetIn">
    <wsdl:part name="ZIP" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCityWeatherByZIPHttpGetOut">
    <wsdl:part name="Body" element="tns:WeatherReturn"/>
  </wsdl:message>
  <wsdl:message name="GetWeatherInformationHttpPostIn"/>
  <wsdl:message name="GetWeatherInformationHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfWeatherDescription"/>
  </wsdl:message>
  <wsdl:message name="GetCityForecastByZIPHttpPostIn">
    <wsdl:part name="ZIP" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCityForecastByZIPHttpPostOut">
    <wsdl:part name="Body" element="tns:ForecastReturn"/>
  </wsdl:message>
  <wsdl:message name="GetCityWeatherByZIPHttpPostIn">
    <wsdl:part name="ZIP" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCityWeatherByZIPHttpPostOut">
    <wsdl:part name="Body" element="tns:WeatherReturn"/>
  </wsdl:message>
  <wsdl:portType name="WeatherSoap">
    <wsdl:operation name="GetWeatherInformation">
      <wsdl:documentation>Gets Information for each WeatherID</wsdl:documentation>
      <wsdl:input message="tns:GetWeatherInformationSoapIn"/>
      <wsdl:output message="tns:GetWeatherInformationSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCityForecastByZIP">
      <wsdl:documentation>Allows you to get your City Forecast Over the Next 7 Days, which is updated hourly. U.S. Only</wsdl:documentation>
      <wsdl:input message="tns:GetCityForecastByZIPSoapIn"/>
      <wsdl:output message="tns:GetCityForecastByZIPSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCityWeatherByZIP">
      <wsdl:documentation>Allows you to get your City's Weather, which is updated hourly. U.S. Only</wsdl:documentation>
      <wsdl:input message="tns:GetCityWeatherByZIPSoapIn"/>
      <wsdl:output message="tns:GetCityWeatherByZIPSoapOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="WeatherHttpGet">
    <wsdl:operation name="GetWeatherInformation">
      <wsdl:documentation>Gets Information for each WeatherID</wsdl:documentation>
      <wsdl:input message="tns:GetWeatherInformationHttpGetIn"/>
      <wsdl:output message="tns:GetWeatherInformationHttpGetOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCityForecastByZIP">
      <wsdl:documentation>Allows you to get your City Forecast Over the Next 7 Days, which is updated hourly. U.S. Only</wsdl:documentation>
      <wsdl:input message="tns:GetCityForecastByZIPHttpGetIn"/>
      <wsdl:output message="tns:GetCityForecastByZIPHttpGetOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCityWeatherByZIP">
      <wsdl:documentation>Allows you to get your City's Weather, which is updated hourly. U.S. Only</wsdl:documentation>
      <wsdl:input message="tns:GetCityWeatherByZIPHttpGetIn"/>
      <wsdl:output message="tns:GetCityWeatherByZIPHttpGetOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="WeatherHttpPost">
    <wsdl:operation name="GetWeatherInformation">
      <wsdl:documentation>Gets Information for each WeatherID</wsdl:documentation>
      <wsdl:input message="tns:GetWeatherInformationHttpPostIn"/>
      <wsdl:output message="tns:GetWeatherInformationHttpPostOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCityForecastByZIP">
      <wsdl:documentation>Allows you to get your City Forecast Over the Next 7 Days, which is updated hourly. U.S. Only</wsdl:documentation>
      <wsdl:input message="tns:GetCityForecastByZIPHttpPostIn"/>
      <wsdl:output message="tns:GetCityForecastByZIPHttpPostOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCityWeatherByZIP">
      <wsdl:documentation>Allows you to get your City's Weather, which is updated hourly. U.S. Only</wsdl:documentation>
      <wsdl:input message="tns:GetCityWeatherByZIPHttpPostIn"/>
      <wsdl:output message="tns:GetCityWeatherByZIPHttpPostOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="WeatherSoap" type="tns:WeatherSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetWeatherInformation">
      <soap:operation soapAction="http://ws.cdyne.com/WeatherWS/GetWeatherInformation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCityForecastByZIP">
      <soap:operation soapAction="http://ws.cdyne.com/WeatherWS/GetCityForecastByZIP" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCityWeatherByZIP">
      <soap:operation soapAction="http://ws.cdyne.com/WeatherWS/GetCityWeatherByZIP" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WeatherSoap12" type="tns:WeatherSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetWeatherInformation">
      <soap12:operation soapAction="http://ws.cdyne.com/WeatherWS/GetWeatherInformation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCityForecastByZIP">
      <soap12:operation soapAction="http://ws.cdyne.com/WeatherWS/GetCityForecastByZIP" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCityWeatherByZIP">
      <soap12:operation soapAction="http://ws.cdyne.com/WeatherWS/GetCityWeatherByZIP" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WeatherHttpGet" type="tns:WeatherHttpGet">
    <http:binding verb="GET"/>
    <wsdl:operation name="GetWeatherInformation">
      <http:operation location="/GetWeatherInformation"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCityForecastByZIP">
      <http:operation location="/GetCityForecastByZIP"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCityWeatherByZIP">
      <http:operation location="/GetCityWeatherByZIP"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WeatherHttpPost" type="tns:WeatherHttpPost">
    <http:binding verb="POST"/>
    <wsdl:operation name="GetWeatherInformation">
      <http:operation location="/GetWeatherInformation"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCityForecastByZIP">
      <http:operation location="/GetCityForecastByZIP"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCityWeatherByZIP">
      <http:operation location="/GetCityWeatherByZIP"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="Weather">
    <wsdl:port name="WeatherSoap" binding="tns:WeatherSoap">
      <soap:address location="http://wsf.cdyne.com/WeatherWS/Weather.asmx"/>
    </wsdl:port>
    <wsdl:port name="WeatherSoap12" binding="tns:WeatherSoap12">
      <soap12:address location="http://wsf.cdyne.com/WeatherWS/Weather.asmx"/>
    </wsdl:port>
    <wsdl:port name="WeatherHttpGet" binding="tns:WeatherHttpGet">
      <http:address location="http://wsf.cdyne.com/WeatherWS/Weather.asmx"/>
    </wsdl:port>
    <wsdl:port name="WeatherHttpPost" binding="tns:WeatherHttpPost">
      <http:address location="http://wsf.cdyne.com/WeatherWS/Weather.asmx"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint></con:endpoints><con:operation id="888b0383-e324-4089-8419-18567626f265" isOneWay="false" action="http://ws.cdyne.com/WeatherWS/GetCityForecastByZIP" name="GetCityForecastByZIP" bindingOperationName="GetCityForecastByZIP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="459806fc-1d44-47c9-80cf-d4cc5a000703" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetCityForecastByZIP>
         <!--Optional:-->
         <weat:ZIP>32006</weat:ZIP>
      </weat:GetCityForecastByZIP>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ws.cdyne.com/WeatherWS/GetCityForecastByZIP"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="6f716df6-8f24-4a97-a5c2-e7fab711432d" isOneWay="false" action="http://ws.cdyne.com/WeatherWS/GetCityWeatherByZIP" name="GetCityWeatherByZIP" bindingOperationName="GetCityWeatherByZIP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="54fb0ed4-a196-4dc2-94f2-8e33c753efa1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetCityWeatherByZIP>
         <!--Optional:-->
         <weat:ZIP>?</weat:ZIP>
      </weat:GetCityWeatherByZIP>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ws.cdyne.com/WeatherWS/GetCityWeatherByZIP"/></con:call></con:operation><con:operation id="317e9964-0796-4425-9ded-9ff68687b7d7" isOneWay="false" action="http://ws.cdyne.com/WeatherWS/GetWeatherInformation" name="GetWeatherInformation" bindingOperationName="GetWeatherInformation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f64f905f-1dab-4e43-a93d-74dfbedd7224" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetWeatherInformation/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ws.cdyne.com/WeatherWS/GetWeatherInformation"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:testSuite id="3e6d20bc-fd20-4ea4-a8b7-dfb26d515a71" name="WeatherSoap12 TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="3a34ef80-a1b4-4c6e-9b99-2c17510b47e5" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="GetCityForecastByZIP TestCase" searchProperties="true" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" id="b4386101-fd4e-4df1-beb9-b159cd7bb7e9" name="GetCityForecastByZIP"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WeatherSoap12</con:interface><con:operation>GetCityForecastByZIP</con:operation><con:request name="GetCityForecastByZIP" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a77b5e00-bf53-49e3-9d42-2f451ca3e7c4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soap:Header/>
   <soap:Body>
      <weat:GetCityForecastByZIP>
         <!--Optional:-->
         <weat:ZIP>32003</weat:ZIP>
      </weat:GetCityForecastByZIP>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ws.cdyne.com/WeatherWS/WeatherSoap/GetCityForecastByZIPRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Write JMS Msg" id="11cedfdc-a36f-47c5-b7dd-82372c0009dc"><con:settings/><con:config><script>import com.oldmutual.iop.*

import static java.lang.Integer.valueOf
import static java.lang.Long.parseLong

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def responseHolder = groovyUtils.getXmlHolder(testRunner.testCase.testSteps["GetCityForecastByZIP"].testRequest.response.responseContent);

JMSConfiguration jmsConfig = new JMSConfiguration()

jmsConfig.hostname = testRunner.testCase.getPropertyValue('hostname')
jmsConfig.port = valueOf((String) testRunner.testCase.getPropertyValue('port'))
jmsConfig.qmanager = testRunner.testCase.getPropertyValue('qmanager')
jmsConfig.channel = testRunner.testCase.getPropertyValue('channel')
jmsConfig.destination = testRunner.testCase.getPropertyValue('destination')
jmsConfig.userID = testRunner.testCase.getPropertyValue('userID')
jmsConfig.passwd = testRunner.testCase.getPropertyValue('passwd')
jmsConfig.timeout = parseLong((String) testRunner.testCase.getPropertyValue('timeout'))

//responseHolder.declareNamespace('ns', "http://ws.cdyne.com/WeatherWS/")

//String wSCity = responseHolder.getNodeValue('//ns:GetCityForecastByZIPResponse/ns:GetCityForecastByZIPResult/ns:WeatherStationCity')

//log.info("${wSCity}")

//assert('Jacksonville' == wSCity)

String msg = responseHolder.getXml()

JMSClient.write(jmsConfig, msg)
log.info("Send message: [${msg}]")


</script></con:config></con:testStep><con:testStep type="groovy" name="Read JMS Msg" id="150d77d3-5ba2-4c12-a615-1f079d228c27"><con:settings/><con:config><script>import static java.lang.Integer.valueOf
import static java.lang.Long.parseLong

import com.eviware.soapui.support.XmlHolder
import com.oldmutual.iop.*

JMSConfiguration jmsConfig = new JMSConfiguration()

jmsConfig.hostname = testRunner.testCase.getPropertyValue('hostname')
jmsConfig.port = valueOf((String) testRunner.testCase.getPropertyValue('port'))
jmsConfig.qmanager = testRunner.testCase.getPropertyValue('qmanager')
jmsConfig.channel = testRunner.testCase.getPropertyValue('channel')
jmsConfig.destination = testRunner.testCase.getPropertyValue('destination')
jmsConfig.userID = testRunner.testCase.getPropertyValue('userID')
jmsConfig.passwd = testRunner.testCase.getPropertyValue('passwd')
jmsConfig.timeout = parseLong((String) testRunner.testCase.getPropertyValue('timeout'))

String msg = JMSClient.read(jmsConfig)

log.info("Read message [ ${msg} ]")

def xmlMsg = new XmlHolder(msg);

xmlMsg.declareNamespace('ns', "http://ws.cdyne.com/WeatherWS/")

String wSCity = xmlMsg.getNodeValue('//ns:GetCityForecastByZIPResponse/ns:GetCityForecastByZIPResult/ns:WeatherStationCity')

log.info("${wSCity}")

assert('Jacksonville' == wSCity)


</script></con:config></con:testStep><con:properties><con:property><con:name>hostname</con:name><con:value>localhost</con:value></con:property><con:property><con:name>port</con:name><con:value>1415</con:value></con:property><con:property><con:name>qmanager</con:name><con:value>QMSPINOZA</con:value></con:property><con:property><con:name>channel</con:name><con:value>SERVCONN</con:value></con:property><con:property><con:name>userID</con:name><con:value>derick</con:value></con:property><con:property><con:name>passwd</con:name><con:value>nopasswd</con:value></con:property><con:property><con:name>destination</con:name><con:value>JMSQ2</con:value></con:property><con:property><con:name>timeout</con:name><con:value>1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ec371ef9-d8bd-49b7-8446-b6f64840e028</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="62014cd6-9007-457e-82d1-440ea330d20f" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="GetCityWeatherByZIP TestCase" searchProperties="true" maxResults="0"><con:settings/><con:testStep type="request" id="58837b82-899c-4989-ba56-5bd3795453f1" name="GetCityWeatherByZIP"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WeatherSoap12</con:interface><con:operation>GetCityWeatherByZIP</con:operation><con:request name="GetCityWeatherByZIP" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d17b86b-fb58-4078-a4bd-21c93fd02a3b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soap:Header/>
   <soap:Body>
      <weat:GetCityWeatherByZIP>
         <!--Optional:-->
         <weat:ZIP>32004</weat:ZIP>
      </weat:GetCityWeatherByZIP>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ws.cdyne.com/WeatherWS/WeatherSoap/GetCityWeatherByZIPRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="9ded0575-c60f-482d-baff-dbb9ff7089cd" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="GetWeatherInformation TestCase" searchProperties="true" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" id="6f2f5752-3c9e-437d-b65a-9eeba17c7488" name="GetWeatherInformation"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WeatherSoap12</con:interface><con:operation>GetWeatherInformation</con:operation><con:request name="GetWeatherInformation" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5ac7367b-e3bd-4b56-8318-8432710f2658"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soap:Header/>
   <soap:Body>
      <weat:GetWeatherInformation/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ws.cdyne.com/WeatherWS/WeatherSoap/GetWeatherInformationRequest"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="5b932ee6-e4af-40a0-a851-f4e4cdd875bc" name="WeatherSoap TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="dfc289f4-8873-4832-94fe-d2ceda8a0a71" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="GetCityForecastByZIP TestCase" searchProperties="true" maxResults="0"><con:settings/><con:testStep type="request" id="0767fd61-bcaa-45f7-88cb-49444f6f08aa" name="GetCityForecastByZIP"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WeatherSoap</con:interface><con:operation>GetCityForecastByZIP</con:operation><con:request name="GetCityForecastByZIP" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f5931365-6fbd-4dff-8c01-f57264cca13e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetCityForecastByZIP>
         <!--Optional:-->
         <weat:ZIP>32004</weat:ZIP>
      </weat:GetCityForecastByZIP>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ws.cdyne.com/WeatherWS/GetCityForecastByZIP"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="xferWeatherStationCity" id="19d64f88-65e6-407c-ba37-3b85a812a95c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>xferWSC</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetCityForecastByZIP</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://ws.cdyne.com/WeatherWS/';

//ns1:GetCityForecastByZIPResponse[1]/ns1:GetCityForecastByZIPResult[1]/ns1:WeatherStationCity[1]</con:sourcePath><con:targetType>WeatherStationCity</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="GS 1 WSC" id="95100f4b-5f0d-4c91-942a-ab47560f150b"><con:settings/><con:config><script>import com.oldmutual.iop.*

def wsCity = testRunner.testCase.getPropertyValue('WeatherStationCity')
log.info("The value of WeatherStationCity = ${wsCity}")

JMSConfiguration jmsConfig = new JMSConfiguration()

jmsConfig.hostname = 'localhost'
jmsConfig.port = 1415
jmsConfig.qmanager = 'QMSPINOZA'
jmsConfig.channel = 'SERVCONN'
jmsConfig.destination = 'JMSQ1'
jmsConfig.userID = 'derick'
jmsConfig.passwd = 'nopasswd'
jmsConfig.timeout = 1L

//def msg = "The quick brown fox is 'n vervlakste skelm en lui jakkals."

JMSClient.write(jmsConfig, wsCity)
log.info("Send message: [${wsCity}]")</script></con:config></con:testStep><con:properties><con:property><con:name>WeatherStationCity</con:name><con:value>Jacksonville Beach</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase id="2ac88647-6943-44e6-9ea9-52426e90801b" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="GetCityWeatherByZIP TestCase" searchProperties="true" maxResults="0"><con:settings/><con:testStep type="request" id="4e17a6c2-0c3e-45f6-9c46-3b66399a05c9" name="GetCityWeatherByZIP"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WeatherSoap</con:interface><con:operation>GetCityWeatherByZIP</con:operation><con:request name="GetCityWeatherByZIP" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e1a0c7b9-0775-4249-bbda-7058fd40a8fb"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetCityWeatherByZIP>
         <!--Optional:-->
         <weat:ZIP>?</weat:ZIP>
      </weat:GetCityWeatherByZIP>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ws.cdyne.com/WeatherWS/GetCityWeatherByZIP"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="19254309-1230-4b29-8201-4ccff17aa830" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="GetWeatherInformation TestCase" searchProperties="true" maxResults="0"><con:settings/><con:testStep type="request" id="8e049bf8-0ee6-4c25-80a9-b2d2cf3a7627" name="GetWeatherInformation"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WeatherSoap</con:interface><con:operation>GetWeatherInformation</con:operation><con:request name="GetWeatherInformation" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="99424539-b7f8-4bba-a431-368c5eba8845"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetWeatherInformation/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ws.cdyne.com/WeatherWS/GetWeatherInformation"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:parameters/><con:parameters/></con:reporting><con:reporting/><con:authRepository/><con:tags/><con:sensitiveInformation/></con:soapui-project>